{
  "version": 3,
  "sources": ["../../../src/api/index.ts"],
  "sourcesContent": ["interface EmailAddress {\n  email: string;\n  name?: string;\n}\n\nexport interface Personalization {\n  to: [EmailAddress, ...EmailAddress[]];\n  from?: EmailAddress;\n  dkim_domain?: string;\n  dkim_private_key?: string;\n  dkim_selector?: string;\n  reply_to?: EmailAddress;\n  cc?: EmailAddress[];\n  bcc?: EmailAddress[];\n  subject?: string;\n  headers?: Record<string, string>;\n}\n\nexport interface ContentItem {\n  type: string;\n  value: string;\n}\n\nexport interface MailSendBody {\n  personalizations: [Personalization, ...Personalization[]];\n  from: EmailAddress;\n  reply_to?: EmailAddress;\n  subject: string;\n  content: [ContentItem, ...ContentItem[]];\n  headers?: Record<string, string>;\n}\n\ninterface Success {\n  success: true;\n}\n\ninterface Failure {\n  success: false;\n  errors: string[];\n}\n\nexport const sendEmail = async (\n  payload: MailSendBody,\n): Promise<Success | Failure> => {\n  const response = await fetch(\"https://api.mailchannels.net/tx/v1/send\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  if (response.status === 202) return { success: true };\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const { errors } = await response.clone().json();\n    return { success: false, errors };\n  } catch {\n    return { success: false, errors: [response.statusText] };\n  }\n};\n"],
  "mappings": ";AAyCO,IAAM,YAAY,OACvB,YAC+B;AAC/B,QAAM,WAAW,MAAM,MAAM,2CAA2C;AAAA,IACtE,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,IAClB;AAAA,IACA,MAAM,KAAK,UAAU,OAAO;AAAA,EAC9B,CAAC;AAED,MAAI,SAAS,WAAW;AAAK,WAAO,EAAE,SAAS,KAAK;AAEpD,MAAI;AAGF,UAAM,EAAE,OAAO,IAAI,MAAM,SAAS,MAAM,EAAE,KAAK;AAC/C,WAAO,EAAE,SAAS,OAAO,OAAO;AAAA,EAClC,QAAQ;AACN,WAAO,EAAE,SAAS,OAAO,QAAQ,CAAC,SAAS,UAAU,EAAE;AAAA,EACzD;AACF;",
  "names": []
}
