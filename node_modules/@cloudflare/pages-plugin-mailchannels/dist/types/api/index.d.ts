interface EmailAddress {
    email: string;
    name?: string;
}
export interface Personalization {
    to: [EmailAddress, ...EmailAddress[]];
    from?: EmailAddress;
    dkim_domain?: string;
    dkim_private_key?: string;
    dkim_selector?: string;
    reply_to?: EmailAddress;
    cc?: EmailAddress[];
    bcc?: EmailAddress[];
    subject?: string;
    headers?: Record<string, string>;
}
export interface ContentItem {
    type: string;
    value: string;
}
export interface MailSendBody {
    personalizations: [Personalization, ...Personalization[]];
    from: EmailAddress;
    reply_to?: EmailAddress;
    subject: string;
    content: [ContentItem, ...ContentItem[]];
    headers?: Record<string, string>;
}
interface Success {
    success: true;
}
interface Failure {
    success: false;
    errors: string[];
}
export declare const sendEmail: (payload: MailSendBody) => Promise<Success | Failure>;
export {};
//# sourceMappingURL=index.d.ts.map